var PROBLEMS = {
  2: {
    problem: `
    <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>
    <p>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>
    <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>`,
    answer: problem2(),
    title: "Even Fibinacci Numbers",
    subtitle: "Problem 2",
  },

  3: {
    problem: [
      "The prime factors of 13195 are 5, 7, 13 and 29.",
      "What is the largest prime factor of the number 600851475143 ?"],
    answer: problem3(),
    title: "Largest prime factor",
    subtitle: "Problem 3",
    url: "https://projecteuler.net/problem=3",
    problemFormatter: function () {
      var html = "";
      for (var i = 0; i < PROBLEMS[3]["problem"].length; i++) {
        html += PROBLEMS[3]["problem"][i] + "\n"
      }

      return html;
    }
  },

  4: {
    problem: [
      "A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.",
      "Find the largest palindrome made from the product of two 3-digit numbers."],
    answer: problem4(),
    title: "Largest palindrome product",
    subtitle: "Problem 4",
    url: "https://projecteuler.net/problem=4",
    problemFormatter: function () {
      var html = "";
      for (var i = 0; i < PROBLEMS[3]["problem"].length; i++) {
        html += PROBLEMS[3]["problem"][i] + "\n"
      }
    }
  },

  "template": {
    problem: [
      "The prime factors of 13195 are 5, 7, 13 and 29.",
      "What is the largest prime factor of the number 600851475143 ?"],
    answer: "problem function",
    title: "Largest prime factor",
    subtitle: "Problem 3",
    url: "https://projecteuler.net/problem=3",
    problemFormatter: function () {
      var html = "";
      for (var i = 0; i < PROBLEMS[3][problem].length; i++) {
        html += PROBLEMS[3]["problem"][i] + "\n"
      }
    }
  }
}

function problem3() {
  return "asdf";
}

function setElement(className, problemNumber, item) {
  var elem = document.getElementsByClassName(className);
  var problem = PROBLEMS[problemNumber];
  var html;
  if (problem.problemFormatter) {
    html = problem.problemFormatter();
  } else {
    html = problem[item];
  }
  elem[0].innerHTML = html;
}

function problem2() {
  var answer
  var fib = 1
  var foo
  var last_fib = 1
  var answerArray = [1]

  function fibIt(a, b) {
    return a + b
  }

  function fibSum(v) {
    var a = 0
    for (;v.length > 0;) {
      vPop = v.pop()
      if (vPop % 2 === 0) {
        a = a + vPop
      }
    }
    return a;
  }

  while (fib < 4000000) {
    answerArray.push(fib)

    foo = fib
    fib = last_fib + fib
    last_fib = foo
  }

  answer = fibSum(answerArray)

  return answer
}

var problemNumber = 3;
setElement('js-question-body', problemNumber, 'problem');
setElement('js-answer', problemNumber, 'answer');
setElement('js-title', problemNumber, 'title');
setElement('js-subtitle', problemNumber, 'subtitle');
